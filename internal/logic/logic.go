// Package logic provides ...
package logic

import (
	"github.com/tfrain/jarvim/internal/vim"
	"github.com/tfrain/jarvim/pkg/util"
)

// RunLogic run our logic
func RunLogic() error {
	util.EnsureFoldersExist(vim.ConfPath, vim.ConfCore, vim.ConfAutoload, vim.ConfModules, vim.CachePath, vim.ConfPlugin)
	r := PluginManage()
	vim.Leaderkey = LeaderKey()
	vim.LocalLeaderKey = LocalLeaderKey()
	vim.Colorscheme = Colorscheme()
	vim.StartScreenPlugin = DashboardPlugin()
	vim.StatusLine = SpacelinePlugin()
	vim.BufferLine = BufferLinePlugin()
	vim.Explorer = ExplorerPlugin()
	vim.Database = DatabasePlugin()
	vim.Fuzzyfind = FuzzyFindPlugin()
	vim.EditorConfig = EditorConfigPlugin()
	vim.IndentPlugin = IndentLinePlugin()
	vim.CommentPlugin = CommentPlugin()
	vim.OutLinePlugin = ViewSymbolsPlugin()
	vim.TagsPlugin = GentagsPlugin()
	vim.QuickRun = QuickRunPlugin()
	vim.DataTypeFile = DataTypeFile(r)
	vim.EnhancePlugins = EnhancePlugin(r)
	vim.SandwichPlugin = SandWichPlugin()
	vim.VersionControlPlugin = VersionControlPlugin(r)
	vim.UserLanguages = LanguageServerProtocol(r)
	r.GenerateInit()
	r.GenerateCore(vim.Leaderkey, vim.LocalLeaderKey, vim.LeaderKeyMap)
	r.GeneratePlugMan()
	r.GenerateGeneral()
	r.GenerateAutoloadFunc()
	r.GeneratePluginFolder()
	r.GenerateDevIcons()
	r.GenerateTheme()
	r.GenerateCacheTheme(vim.Colorscheme, vim.ColorschemeMap)
	r.GenerateColorscheme(vim.Colorscheme)
	r.GenerateDashboard(vim.StartScreenPlugin)
	r.GenerateBufferLine(vim.BufferLine)
	r.GenerateStatusLine(vim.StatusLine)
	r.GenerateExplorer(vim.Explorer)
	r.GenerateDatabase(vim.Database)
	r.GenerateFuzzyFind(vim.Fuzzyfind)
	r.GenerateEditorConfig(vim.EditorConfig)
	r.GenerateIndentLine(vim.IndentPlugin)
	r.GenerateComment(vim.CommentPlugin)
	r.GenerateOutLine(vim.OutLinePlugin)
	r.GenerateTags(vim.TagsPlugin)
	r.GenerateQuickRun(vim.QuickRun)
	r.GenerateDataTypeFile(vim.DataTypeFile, NewDataFileMap(r))
	r.GenerateEnhanceplugin(vim.EnhancePlugins, NewEnhancePluginMap(r))
	r.GenerateSandWich(vim.SandwichPlugin)
	r.GenerateTextObj()
	r.GenerateVersionControl(vim.VersionControlPlugin, NewVersionPluginMap(r))
	r.GenerateCocJson()
	r.GenerateVimMap()
	r.GenerateLanguagePlugin(vim.UserLanguages, NewLanguagePlugMap(r))
	r.GenerateInstallScripts()
	return nil
}
